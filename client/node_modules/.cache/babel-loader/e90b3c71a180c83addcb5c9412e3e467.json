{"ast":null,"code":"import _objectSpread from\"D:\\\\Work\\\\Projects\\\\web_sheet_node_server\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _slicedToArray from\"D:\\\\Work\\\\Projects\\\\web_sheet_node_server\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import css from\"./Searcher.module.css\";import SearchItem from\"./SearchItem/SearchItem\";import Input from\"../../Custom/SearchInput/SearchInput\";import{useState,useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{updateSearchPerson}from\"../../../redux/calendar/calendarActions\";import{withAuth}from\"../../hoc/withAuth\";import{Navigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Searcher=function Searcher(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),valSearch=_useState2[0],setValSearch=_useState2[1];var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.calendar;}),searcherPersons=_useSelector.searcherPersons;var _useSelector2=useSelector(function(state){return state.user;}),personId=_useSelector2.personId;useEffect(function(){dispatch(updateSearchPerson(valSearch));},[valSearch,dispatch]);if(personId)return/*#__PURE__*/_jsx(Navigate,{to:\"/user/calendar/\".concat(personId)});return/*#__PURE__*/_jsxs(\"section\",{className:css.searcher,children:[/*#__PURE__*/_jsx(\"div\",{className:css.searchbar,children:/*#__PURE__*/_jsx(Input,{onInput:setValSearch,value:valSearch})}),/*#__PURE__*/_jsx(\"div\",{id:\"datalist\",className:css.datalist,children:searcherPersons.map(function(item){return/*#__PURE__*/_createElement(SearchItem,_objectSpread(_objectSpread({},item),{},{key:item._id}));})})]});};export default withAuth(Searcher);","map":{"version":3,"sources":["D:/Work/Projects/web_sheet_node_server/client/src/components/SearchCalendar/Searcher/Searcher.jsx"],"names":["css","SearchItem","Input","useState","useEffect","useDispatch","useSelector","updateSearchPerson","withAuth","Navigate","Searcher","valSearch","setValSearch","dispatch","state","calendar","searcherPersons","user","personId","searcher","searchbar","datalist","map","item","_id"],"mappings":"yRAAA,MAAOA,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,sCAAlB,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,kBAAT,KAAmC,yCAAnC,CACA,OAASC,QAAT,KAAyB,oBAAzB,CACA,OAASC,QAAT,KAAyB,kBAAzB,C,2IAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,cAAkCP,QAAQ,CAAC,EAAD,CAA1C,wCAAOQ,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CACA,iBAA4BC,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACC,QAAjB,EAAD,CAAvC,CAAQC,eAAR,cAAQA,eAAR,CACA,kBAAqBV,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACG,IAAjB,EAAD,CAAhC,CAAQC,QAAR,eAAQA,QAAR,CAEAd,SAAS,CAAC,UAAM,CACdS,QAAQ,CAACN,kBAAkB,CAACI,SAAD,CAAnB,CAAR,CACD,CAFQ,CAEN,CAACA,SAAD,CAAYE,QAAZ,CAFM,CAAT,CAIA,GAAIK,QAAJ,CAAc,mBAAO,KAAC,QAAD,EAAU,EAAE,0BAAoBA,QAApB,CAAZ,EAAP,CAEd,mBACE,iBAAS,SAAS,CAAElB,GAAG,CAACmB,QAAxB,wBACE,YAAK,SAAS,CAAEnB,GAAG,CAACoB,SAApB,uBACE,KAAC,KAAD,EAAO,OAAO,CAAER,YAAhB,CAA8B,KAAK,CAAED,SAArC,EADF,EADF,cAIE,YAAK,EAAE,CAAC,UAAR,CAAmB,SAAS,CAAEX,GAAG,CAACqB,QAAlC,UACGL,eAAe,CAACM,GAAhB,CAAoB,SAACC,IAAD,CAAU,CAC7B,mBAAO,eAAC,UAAD,gCAAgBA,IAAhB,MAAsB,GAAG,CAAEA,IAAI,CAACC,GAAhC,GAAP,CACD,CAFA,CADH,EAJF,GADF,CAYD,CAxBD,CA0BA,cAAehB,CAAAA,QAAQ,CAACE,QAAD,CAAvB","sourcesContent":["import css from \"./Searcher.module.css\";\r\nimport SearchItem from \"./SearchItem/SearchItem\";\r\nimport Input from \"../../Custom/SearchInput/SearchInput\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateSearchPerson } from \"../../../redux/calendar/calendarActions\";\r\nimport { withAuth } from \"../../hoc/withAuth\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst Searcher = () => {\r\n  const [valSearch, setValSearch] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const { searcherPersons } = useSelector((state) => state.calendar);\r\n  const { personId } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(updateSearchPerson(valSearch));\r\n  }, [valSearch, dispatch]);\r\n\r\n  if (personId) return <Navigate to={`/user/calendar/${personId}`} />;\r\n\r\n  return (\r\n    <section className={css.searcher}>\r\n      <div className={css.searchbar}>\r\n        <Input onInput={setValSearch} value={valSearch} />\r\n      </div>\r\n      <div id=\"datalist\" className={css.datalist}>\r\n        {searcherPersons.map((item) => {\r\n          return <SearchItem {...item} key={item._id} />;\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withAuth(Searcher);\r\n"]},"metadata":{},"sourceType":"module"}