{"ast":null,"code":"import axios from \"axios\";\nimport { domain } from \"../../config\";\nimport { CHECK, LOGIN, LOGOUT } from \"../types\";\naxios.defaults.auth = true;\naxios.defaults.withCredentials = true;\nexport function login(userId) {\n  return {\n    type: LOGIN,\n    payload: userId\n  };\n}\nexport function logout() {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios({\n        method: \"get\",\n        url: `${domain}/auth/logout`\n      });\n\n      if (data.success) {\n        dispatch({\n          type: LOGOUT\n        });\n      }\n    } catch (error) {\n      console.log(\"Logout error\", error);\n    }\n  };\n}\nexport function check() {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios({\n        method: \"get\",\n        url: `${domain}/auth/check`,\n        withCredentials: true\n      });\n\n      if (data.success) {\n        dispatch({\n          type: CHECK,\n          payload: {\n            isAuth: true,\n            userId: data.decodedData.id\n          }\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: CHECK,\n        payload: {\n          isAuth: false,\n          userId: null\n        }\n      });\n      console.log(\"Check error\", error);\n    }\n  };\n}","map":{"version":3,"sources":["D:/Work/websheets/src/redux/app/appActions.js"],"names":["axios","domain","CHECK","LOGIN","LOGOUT","defaults","auth","withCredentials","login","userId","type","payload","logout","dispatch","data","method","url","success","error","console","log","check","isAuth","decodedData","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,QAAqC,UAArC;AACAJ,KAAK,CAACK,QAAN,CAAeC,IAAf,GAAsB,IAAtB;AACAN,KAAK,CAACK,QAAN,CAAeE,eAAf,GAAiC,IAAjC;AAEA,OAAO,SAASC,KAAT,CAAeC,MAAf,EAAuB;AAC5B,SAAO;AACLC,IAAAA,IAAI,EAAEP,KADD;AAELQ,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID;AAED,OAAO,SAASG,MAAT,GAAkB;AACvB,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMd,KAAK,CAAC;AAC3Be,QAAAA,MAAM,EAAE,KADmB;AAE3BC,QAAAA,GAAG,EAAG,GAAEf,MAAO;AAFY,OAAD,CAA5B;;AAIA,UAAIa,IAAI,CAACG,OAAT,EAAkB;AAChBJ,QAAAA,QAAQ,CAAC;AACPH,UAAAA,IAAI,EAAEN;AADC,SAAD,CAAR;AAGD;AACF,KAVD,CAUE,OAAOc,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,KAA5B;AACD;AACF,GAdD;AAeD;AAED,OAAO,SAASG,KAAT,GAAiB;AACtB,SAAO,MAAOR,QAAP,IAAoB;AACzB,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMd,KAAK,CAAC;AAC3Be,QAAAA,MAAM,EAAE,KADmB;AAE3BC,QAAAA,GAAG,EAAG,GAAEf,MAAO,aAFY;AAG3BM,QAAAA,eAAe,EAAE;AAHU,OAAD,CAA5B;;AAKA,UAAIO,IAAI,CAACG,OAAT,EAAkB;AAChBJ,QAAAA,QAAQ,CAAC;AACPH,UAAAA,IAAI,EAAER,KADC;AAEPS,UAAAA,OAAO,EAAE;AACPW,YAAAA,MAAM,EAAE,IADD;AAEPb,YAAAA,MAAM,EAAEK,IAAI,CAACS,WAAL,CAAiBC;AAFlB;AAFF,SAAD,CAAR;AAOD;AACF,KAfD,CAeE,OAAON,KAAP,EAAc;AACdL,MAAAA,QAAQ,CAAC;AACPH,QAAAA,IAAI,EAAER,KADC;AAEPS,QAAAA,OAAO,EAAE;AACPW,UAAAA,MAAM,EAAE,KADD;AAEPb,UAAAA,MAAM,EAAE;AAFD;AAFF,OAAD,CAAR;AAOAU,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACD;AACF,GA1BD;AA2BD","sourcesContent":["import axios from \"axios\";\r\nimport { domain } from \"../../config\";\r\nimport { CHECK, LOGIN, LOGOUT } from \"../types\";\r\naxios.defaults.auth = true;\r\naxios.defaults.withCredentials = true;\r\n\r\nexport function login(userId) {\r\n  return {\r\n    type: LOGIN,\r\n    payload: userId,\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return async (dispatch) => {\r\n    try {\r\n      const { data } = await axios({\r\n        method: \"get\",\r\n        url: `${domain}/auth/logout`,\r\n      });\r\n      if (data.success) {\r\n        dispatch({\r\n          type: LOGOUT,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Logout error\", error);\r\n    }\r\n  };\r\n}\r\n\r\nexport function check() {\r\n  return async (dispatch) => {\r\n    try {\r\n      const { data } = await axios({\r\n        method: \"get\",\r\n        url: `${domain}/auth/check`,\r\n        withCredentials: true,\r\n      });\r\n      if (data.success) {\r\n        dispatch({\r\n          type: CHECK,\r\n          payload: {\r\n            isAuth: true,\r\n            userId: data.decodedData.id,\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CHECK,\r\n        payload: {\r\n          isAuth: false,\r\n          userId: null,\r\n        },\r\n      });\r\n      console.log(\"Check error\", error);\r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}