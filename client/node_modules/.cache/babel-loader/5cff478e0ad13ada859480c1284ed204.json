{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\websheets\\\\src\\\\components\\\\SearchCalendar\\\\PersonCalendar\\\\PersonCalendar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Calendar from \"react-calendar\";\nimport css from \"./PersonCalendar.module.css\";\nimport { ReactComponent as ChangeNameSvg } from \"../../../svg/Write.svg\";\nimport \"./ReactCalendar.css\";\nimport PersonsInDate from \"./PersonsInDate/PersonsInDate\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { loadMainDate, loadSidePersons, nextSidePage, showWorkshift, updateTargetDate } from \"../../../redux/calendar/calendarActions\";\nimport { bindPersonToUser } from \"../../../redux/user/userActions\";\nimport Spinner from \"../../Custom/Spinner/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VISIBLE_ITEMS = 4;\n\nfunction sameDay(d1, d2) {\n  return d1.getFullYear() === d2.getFullYear() && d1.getDate() === d2.getDate() && d1.getMonth() === d2.getMonth();\n}\n\nconst PersonCalendar = props => {\n  _s();\n\n  const {\n    person_id\n  } = useParams();\n  const {\n    workShifts,\n    personName,\n    isLoading\n  } = useSelector(state => state.calendar);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadMainDate(person_id));\n    dispatch(bindPersonToUser(person_id));\n  }, [person_id, dispatch]);\n  useEffect(() => {\n    dispatch(loadSidePersons(new Date(+props.targetDate)));\n  }, [props.targetDate, dispatch]);\n  useEffect(() => {\n    const currrentWsItem = workShifts.filter(item => sameDay(item.date, props.targetDate))[0];\n    const workshift = (currrentWsItem === null || currrentWsItem === void 0 ? void 0 : currrentWsItem.shiftTime) || (currrentWsItem === null || currrentWsItem === void 0 ? void 0 : currrentWsItem.shiftProp);\n    dispatch(showWorkshift(workshift));\n    dispatch(nextSidePage(\"reset\"));\n  }, [props.targetDate, dispatch, workShifts]);\n  const resetBind = useCallback(() => {\n    dispatch(bindPersonToUser());\n  }, [dispatch]);\n  const highlightWorkdates = useCallback(date => {\n    if (workShifts.map(item => +item.date).includes(+date.date)) {\n      return \"highlight__day\";\n    }\n  }, [workShifts]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"defaultContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.namefield,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.name,\n        children: personName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: css.changeIcon,\n        to: \"/user/calendar\",\n        onClick: resetBind,\n        children: /*#__PURE__*/_jsxDEV(ChangeNameSvg, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.calendar,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.calendarItem,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.calendarBox,\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            tileClassName: highlightWorkdates,\n            onChange: props.updateTargetDate,\n            value: props.targetDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(PersonsInDate, {\n        VISIBLE_ITEMS: VISIBLE_ITEMS\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PersonCalendar, \"bg2G0CN6gXnExC9QoqH+u8/YO6Q=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = PersonCalendar;\n\nconst mapStateToProps = state => {\n  return {\n    targetDate: state.calendar.targetDate\n  };\n};\n\nconst mapDispatchToProps = {\n  updateTargetDate\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonCalendar);\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonCalendar\");","map":{"version":3,"sources":["D:/Work/websheets/src/components/SearchCalendar/PersonCalendar/PersonCalendar.jsx"],"names":["React","useEffect","useCallback","Link","useParams","Calendar","css","ReactComponent","ChangeNameSvg","PersonsInDate","connect","useDispatch","useSelector","loadMainDate","loadSidePersons","nextSidePage","showWorkshift","updateTargetDate","bindPersonToUser","Spinner","VISIBLE_ITEMS","sameDay","d1","d2","getFullYear","getDate","getMonth","PersonCalendar","props","person_id","workShifts","personName","isLoading","state","calendar","dispatch","Date","targetDate","currrentWsItem","filter","item","date","workshift","shiftTime","shiftProp","resetBind","highlightWorkdates","map","includes","namefield","name","changeIcon","calendarItem","calendarBox","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Calendar from \"react-calendar\";\r\nimport css from \"./PersonCalendar.module.css\";\r\nimport { ReactComponent as ChangeNameSvg } from \"../../../svg/Write.svg\";\r\nimport \"./ReactCalendar.css\";\r\nimport PersonsInDate from \"./PersonsInDate/PersonsInDate\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  loadMainDate,\r\n  loadSidePersons,\r\n  nextSidePage,\r\n  showWorkshift,\r\n  updateTargetDate,\r\n} from \"../../../redux/calendar/calendarActions\";\r\nimport { bindPersonToUser } from \"../../../redux/user/userActions\";\r\nimport Spinner from \"../../Custom/Spinner/Spinner\";\r\n\r\nconst VISIBLE_ITEMS = 4;\r\n\r\nfunction sameDay(d1, d2) {\r\n  return (\r\n    d1.getFullYear() === d2.getFullYear() &&\r\n    d1.getDate() === d2.getDate() &&\r\n    d1.getMonth() === d2.getMonth()\r\n  );\r\n}\r\n\r\nconst PersonCalendar = (props) => {\r\n  const { person_id } = useParams();\r\n  const { workShifts, personName, isLoading } = useSelector(\r\n    (state) => state.calendar\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadMainDate(person_id));\r\n    dispatch(bindPersonToUser(person_id));\r\n  }, [person_id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadSidePersons(new Date(+props.targetDate)));\r\n  }, [props.targetDate, dispatch]);\r\n\r\n  useEffect(() => {\r\n    const currrentWsItem = workShifts.filter((item) =>\r\n      sameDay(item.date, props.targetDate)\r\n    )[0];\r\n    const workshift = currrentWsItem?.shiftTime || currrentWsItem?.shiftProp;\r\n    dispatch(showWorkshift(workshift));\r\n    dispatch(nextSidePage(\"reset\"));\r\n  }, [props.targetDate, dispatch, workShifts]);\r\n\r\n  const resetBind = useCallback(() => {\r\n    dispatch(bindPersonToUser());\r\n  }, [dispatch]);\r\n\r\n  const highlightWorkdates = useCallback(\r\n    (date) => {\r\n      if (workShifts.map((item) => +item.date).includes(+date.date)) {\r\n        return \"highlight__day\";\r\n      }\r\n    },\r\n    [workShifts]\r\n  );\r\n\r\n  return (\r\n    <section className=\"defaultContainer\">\r\n      <div className={css.namefield}>\r\n        <p className={css.name}>{personName}</p>\r\n        <Link\r\n          className={css.changeIcon}\r\n          to=\"/user/calendar\"\r\n          onClick={resetBind}\r\n        >\r\n          <ChangeNameSvg />\r\n        </Link>\r\n      </div>\r\n      <div className={css.calendar}>\r\n        <div className={css.calendarItem}>\r\n          <div className={css.calendarBox}>\r\n            <Calendar\r\n              tileClassName={highlightWorkdates}\r\n              onChange={props.updateTargetDate}\r\n              value={props.targetDate}\r\n            />\r\n          </div>\r\n        </div>\r\n        {isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <PersonsInDate VISIBLE_ITEMS={VISIBLE_ITEMS} />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    targetDate: state.calendar.targetDate,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateTargetDate,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonCalendar);\r\n"]},"metadata":{},"sourceType":"module"}