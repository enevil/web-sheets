{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\websheets\\\\src\\\\components\\\\Authorization\\\\RegistrationForm\\\\RegistrationForm.jsx\",\n    _s = $RefreshSig$();\n\nimport Input from \"./../../Custom/FormInput/FormInput\";\nimport { FormProvider } from \"react-hook-form\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../../redux/app/appActions\";\nimport css from \"./RegistrationForm.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { domain } from \"../../../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EMAIL_PATTERN = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nconst RegistrationForm = () => {\n  _s();\n\n  const formMethods = useForm();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    setError,\n    handleSubmit\n  } = formMethods;\n\n  const onSubmit = async formData => {\n    if (!(formData.password === formData.repeatPassword)) {\n      setError(\"password\", {\n        type: \"notSame\",\n        message: \"Passwords are not the same\"\n      });\n      return;\n    }\n\n    try {\n      const {\n        data\n      } = await axios.post(`${domain}/auth/registration`, { ...formData\n      });\n\n      if (data.response === \"success\") {\n        dispatch(login(data.userId));\n        navigate(\"/user\");\n      }\n\n      if (data.response === \"fail\") console.log(\"Database error\");\n    } catch (error) {\n      var _error$response;\n\n      const myError = error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data;\n\n      switch (myError === null || myError === void 0 ? void 0 : myError.cause) {\n        case \"isExist\":\n          setError(myError.field, {\n            type: \"isExist\",\n            message: `${myError.label} уже существует`\n          });\n          break;\n\n        default:\n          console.log(\"Неизвестная ошибка\", error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormProvider, { ...formMethods,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.form,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          name: \"firstName\",\n          label: \"\\u0418\\u043C\\u044F\",\n          validator: {\n            minLength: 2,\n            maxLength: 25\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"lastName\",\n          label: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n          validator: {\n            minLength: 2,\n            maxLength: 25\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"email\",\n          label: \"Email\",\n          validator: {\n            pattern: EMAIL_PATTERN\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"username\",\n          label: \"\\u041D\\u0438\\u043A\\u043D\\u0435\\u0439\\u043C\",\n          validator: {\n            minLength: 2,\n            maxLength: 25\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"password\",\n          type: \"password\",\n          label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          validator: {\n            minLength: 6,\n            maxLength: 50\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"repeatPassword\",\n          type: \"password\",\n          label: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          validator: {\n            minLength: 6,\n            maxLength: 50\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: css.submit,\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationForm, \"J8Zp+scplLH90p1688osvEvvCqQ=\", false, function () {\n  return [useForm, useNavigate, useDispatch];\n});\n\n_c = RegistrationForm;\nexport default RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["D:/Work/websheets/src/components/Authorization/RegistrationForm/RegistrationForm.jsx"],"names":["Input","FormProvider","useForm","axios","useDispatch","login","css","useNavigate","domain","EMAIL_PATTERN","RegistrationForm","formMethods","navigate","dispatch","setError","handleSubmit","onSubmit","formData","password","repeatPassword","type","message","data","post","response","userId","console","log","error","myError","cause","field","label","form","minLength","maxLength","pattern","submit"],"mappings":"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","sourcesContent":["import Input from \"./../../Custom/FormInput/FormInput\";\r\nimport { FormProvider } from \"react-hook-form\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../../../redux/app/appActions\";\r\nimport css from \"./RegistrationForm.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { domain } from \"../../../config\";\r\n\r\nconst EMAIL_PATTERN =\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nconst RegistrationForm = () => {\r\n  const formMethods = useForm();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const { setError, handleSubmit } = formMethods;\r\n\r\n  const onSubmit = async (formData) => {\r\n    if (!(formData.password === formData.repeatPassword)) {\r\n      setError(\"password\", {\r\n        type: \"notSame\",\r\n        message: \"Passwords are not the same\",\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      const { data } = await axios.post(`${domain}/auth/registration`, {\r\n        ...formData,\r\n      });\r\n\r\n      if (data.response === \"success\") {\r\n        dispatch(login(data.userId));\r\n        navigate(\"/user\");\r\n      }\r\n      if (data.response === \"fail\") console.log(\"Database error\");\r\n    } catch (error) {\r\n      const myError = error?.response?.data;\r\n\r\n      switch (myError?.cause) {\r\n        case \"isExist\":\r\n          setError(myError.field, {\r\n            type: \"isExist\",\r\n            message: `${myError.label} уже существует`,\r\n          });\r\n          break;\r\n\r\n        default:\r\n          console.log(\"Неизвестная ошибка\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider {...formMethods}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className={css.form}>\r\n          <Input\r\n            name=\"firstName\"\r\n            label=\"Имя\"\r\n            validator={{ minLength: 2, maxLength: 25 }}\r\n          />\r\n          <Input\r\n            name=\"lastName\"\r\n            label=\"Фамилия\"\r\n            validator={{ minLength: 2, maxLength: 25 }}\r\n          />\r\n          <Input\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            validator={{ pattern: EMAIL_PATTERN }}\r\n          />\r\n          <Input\r\n            name=\"username\"\r\n            label=\"Никнейм\"\r\n            validator={{ minLength: 2, maxLength: 25 }}\r\n          />\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            label=\"Пароль\"\r\n            validator={{ minLength: 6, maxLength: 50 }}\r\n          />\r\n          <Input\r\n            name=\"repeatPassword\"\r\n            type=\"password\"\r\n            label=\"Повторите пароль\"\r\n            validator={{ minLength: 6, maxLength: 50 }}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className={css.submit}>\r\n          Отправить\r\n        </button>\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n"]},"metadata":{},"sourceType":"module"}