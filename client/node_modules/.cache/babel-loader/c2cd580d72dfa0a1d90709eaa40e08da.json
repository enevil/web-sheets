{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\websheets\\\\src\\\\components\\\\Authorization\\\\LoginForm\\\\LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport Input from \"./../../Custom/FormInput/FormInput\";\nimport { FormProvider } from \"react-hook-form\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../../redux/app/appActions\";\nimport css from \"./../RegistrationForm/RegistrationForm.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { domain } from \"../../../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const formMethods = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    setError,\n    handleSubmit\n  } = formMethods;\n\n  const onSubmit = async formData => {\n    try {\n      const {\n        data\n      } = await axios.post(`${domain}/auth/login`, { ...formData\n      });\n\n      if (data.response === \"success\") {\n        dispatch(login(data.userId));\n        navigate(\"/user\");\n      }\n\n      if (data.response === \"fail\") console.log(\"Database error\");\n    } catch (error) {\n      var _error$response;\n\n      const myError = error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data;\n\n      switch (myError === null || myError === void 0 ? void 0 : myError.cause) {\n        case \"isNotExist\":\n          setError(myError.field, {\n            type: \"isNotExist\",\n            message: `${myError.label} не найден`\n          });\n          break;\n\n        case \"wrongData\":\n          setError(myError.field, {\n            type: \"wrongData\",\n            message: `${myError.label} не верен`\n          });\n          break;\n\n        default:\n          console.log(\"Неизвестная ошибка\", error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormProvider, { ...formMethods,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.form,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          name: \"email\",\n          label: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"password\",\n          type: \"password\",\n          label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: css.submit,\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"AW9t2i9IFdqAV8nEX4WhtknCTfE=\", false, function () {\n  return [useForm, useDispatch, useNavigate];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["D:/Work/websheets/src/components/Authorization/LoginForm/LoginForm.jsx"],"names":["Input","FormProvider","useForm","axios","useDispatch","login","css","useNavigate","domain","LoginForm","formMethods","dispatch","navigate","setError","handleSubmit","onSubmit","formData","data","post","response","userId","console","log","error","myError","cause","field","type","message","label","form","submit"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oCAAlB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,+BAAtB;AACA,OAAOC,GAAP,MAAgB,mDAAhB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,WAAW,GAAGR,OAAO,EAA3B;AACA,QAAMS,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BJ,WAAnC;;AAEA,QAAMK,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AACnC,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMd,KAAK,CAACe,IAAN,CAAY,GAAEV,MAAO,aAArB,EAAmC,EACxD,GAAGQ;AADqD,OAAnC,CAAvB;;AAIA,UAAIC,IAAI,CAACE,QAAL,KAAkB,SAAtB,EAAiC;AAC/BR,QAAAA,QAAQ,CAACN,KAAK,CAACY,IAAI,CAACG,MAAN,CAAN,CAAR;AACAR,QAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;;AACD,UAAIK,IAAI,CAACE,QAAL,KAAkB,MAAtB,EAA8BE,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAC/B,KAVD,CAUE,OAAOC,KAAP,EAAc;AAAA;;AACd,YAAMC,OAAO,GAAGD,KAAH,aAAGA,KAAH,0CAAGA,KAAK,CAAEJ,QAAV,oDAAG,gBAAiBF,IAAjC;;AAEA,cAAQO,OAAR,aAAQA,OAAR,uBAAQA,OAAO,CAAEC,KAAjB;AACE,aAAK,YAAL;AACEZ,UAAAA,QAAQ,CAACW,OAAO,CAACE,KAAT,EAAgB;AACtBC,YAAAA,IAAI,EAAE,YADgB;AAEtBC,YAAAA,OAAO,EAAG,GAAEJ,OAAO,CAACK,KAAM;AAFJ,WAAhB,CAAR;AAIA;;AAEF,aAAK,WAAL;AACEhB,UAAAA,QAAQ,CAACW,OAAO,CAACE,KAAT,EAAgB;AACtBC,YAAAA,IAAI,EAAE,WADgB;AAEtBC,YAAAA,OAAO,EAAG,GAAEJ,OAAO,CAACK,KAAM;AAFJ,WAAhB,CAAR;AAIA;;AAEF;AACER,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCC,KAAlC;AAhBJ;AAkBD;AACF,GAjCD;;AAmCA,sBACE,QAAC,YAAD,OAAkBb,WAAlB;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEI,YAAY,CAACC,QAAD,CAA5B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAET,GAAG,CAACwB,IAApB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,UAA5B;AAAuC,UAAA,KAAK,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAExB,GAAG,CAACyB,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvDD;;GAAMtB,S;UACgBP,O,EACHE,W,EACAG,W;;;KAHbE,S;AAyDN,eAAeA,SAAf","sourcesContent":["import Input from \"./../../Custom/FormInput/FormInput\";\r\nimport { FormProvider } from \"react-hook-form\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../../../redux/app/appActions\";\r\nimport css from \"./../RegistrationForm/RegistrationForm.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { domain } from \"../../../config\";\r\n\r\nconst LoginForm = () => {\r\n  const formMethods = useForm();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { setError, handleSubmit } = formMethods;\r\n\r\n  const onSubmit = async (formData) => {\r\n    try {\r\n      const { data } = await axios.post(`${domain}/auth/login`, {\r\n        ...formData,\r\n      });\r\n\r\n      if (data.response === \"success\") {\r\n        dispatch(login(data.userId));\r\n        navigate(\"/user\");\r\n      }\r\n      if (data.response === \"fail\") console.log(\"Database error\");\r\n    } catch (error) {\r\n      const myError = error?.response?.data;\r\n\r\n      switch (myError?.cause) {\r\n        case \"isNotExist\":\r\n          setError(myError.field, {\r\n            type: \"isNotExist\",\r\n            message: `${myError.label} не найден`,\r\n          });\r\n          break;\r\n\r\n        case \"wrongData\":\r\n          setError(myError.field, {\r\n            type: \"wrongData\",\r\n            message: `${myError.label} не верен`,\r\n          });\r\n          break;\r\n\r\n        default:\r\n          console.log(\"Неизвестная ошибка\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider {...formMethods}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className={css.form}>\r\n          <Input name=\"email\" label=\"Email\" />\r\n          <Input name=\"password\" type=\"password\" label=\"Пароль\" />\r\n        </div>\r\n\r\n        <button type=\"submit\" className={css.submit}>\r\n          Войти\r\n        </button>\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}