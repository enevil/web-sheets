{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\websheets\\\\src\\\\components\\\\Settings\\\\Settings.jsx\",\n    _s = $RefreshSig$();\n\nimport { withAuth } from \"../hoc/withAuth\";\nimport css from \"./Settings.module.css\";\nimport { useCallback, useState } from \"react\";\nimport MessagePopup from \"./MessagePopup/MessagePopup\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { setMessage } from \"../../redux/settings/settingsActions\";\nimport { Widget } from \"@uploadcare/react-widget\";\nimport SendButton from \"./SendButton/SendButton\";\nimport axios from \"axios\";\nimport { domain } from \"../../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const {\n    userId\n  } = useSelector(state => state.app);\n  const [profileImg, setProfileImg] = useState(null);\n  const {\n    settingsMessages\n  } = useSelector(state => state.settings);\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const changeProfileImage = useCallback(e => {\n    console.log(e);\n  });\n\n  const fileTypeLimit = allowedFileTypes => {\n    const types = allowedFileTypes.split(\" \");\n    return function (fileInfo) {\n      if (fileInfo.name === null) {\n        return;\n      }\n\n      const extension = fileInfo.name.split(\".\").pop();\n\n      if (extension && !types.includes(extension)) {\n        dispatch(setMessage(\"FORBIDDEN_TYPE\"));\n      }\n    };\n  };\n\n  const sendPassword = useCallback(async () => {\n    try {\n      if (password.length < 6) {\n        dispatch(setMessage(\"PASSWORD_CHANGE_LENGTH\"));\n        return;\n      }\n\n      const response = await axios({\n        method: \"put\",\n        url: `${domain}/user/change_password`,\n        data: {\n          id: userId,\n          password\n        }\n      });\n\n      if (response.status === 200) {\n        dispatch(setMessage(\"PASSWORD_CHANGE_SUCCESS\"));\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch(setMessage(\"PASSWORD_CHANGE_ERROR\"));\n    }\n  }, [dispatch, password, userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.container,\n    children: [settingsMessages && /*#__PURE__*/_jsxDEV(MessagePopup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: css.item,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: css.itemName,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0444\\u043E\\u0442\\u043E \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.itemSetter,\n          children: /*#__PURE__*/_jsxDEV(Widget, {\n            validators: [fileTypeLimit(\"jpeg png jpg\")],\n            tabs: \"file url\",\n            onChange: changeProfileImage,\n            publicKey: \"73fb322ae944f810ceb2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: css.item,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: css.itemName,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.itemSetter,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setPassword(e.target.value),\n            className: css.textInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n            onClick: () => sendPassword()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Settings, \"HJKeqflvgT/q+2HoLhT/uCsv6RA=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Settings;\nexport default _c2 = withAuth(Settings);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Settings\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/Work/websheets/src/components/Settings/Settings.jsx"],"names":["withAuth","css","useCallback","useState","MessagePopup","useSelector","useDispatch","setMessage","Widget","SendButton","axios","domain","Settings","userId","state","app","profileImg","setProfileImg","settingsMessages","settings","password","setPassword","dispatch","changeProfileImage","e","console","log","fileTypeLimit","allowedFileTypes","types","split","fileInfo","name","extension","pop","includes","sendPassword","length","response","method","url","data","id","status","error","container","item","itemName","itemSetter","target","value","textInput"],"mappings":"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","sourcesContent":["import { withAuth } from \"../hoc/withAuth\";\r\nimport css from \"./Settings.module.css\";\r\nimport { useCallback, useState } from \"react\";\r\nimport MessagePopup from \"./MessagePopup/MessagePopup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setMessage } from \"../../redux/settings/settingsActions\";\r\nimport { Widget } from \"@uploadcare/react-widget\";\r\nimport SendButton from \"./SendButton/SendButton\";\r\nimport axios from \"axios\";\r\nimport { domain } from \"../../config\";\r\n\r\nconst Settings = () => {\r\n  const { userId } = useSelector((state) => state.app);\r\n  const [profileImg, setProfileImg] = useState(null);\r\n  const { settingsMessages } = useSelector((state) => state.settings);\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const changeProfileImage = useCallback((e) => {\r\n    console.log(e);\r\n  });\r\n\r\n  const fileTypeLimit = (allowedFileTypes) => {\r\n    const types = allowedFileTypes.split(\" \");\r\n\r\n    return function (fileInfo) {\r\n      if (fileInfo.name === null) {\r\n        return;\r\n      }\r\n      const extension = fileInfo.name.split(\".\").pop();\r\n\r\n      if (extension && !types.includes(extension)) {\r\n        dispatch(setMessage(\"FORBIDDEN_TYPE\"));\r\n      }\r\n    };\r\n  };\r\n\r\n  const sendPassword = useCallback(async () => {\r\n    try {\r\n      if (password.length < 6) {\r\n        dispatch(setMessage(\"PASSWORD_CHANGE_LENGTH\"));\r\n        return;\r\n      }\r\n      const response = await axios({\r\n        method: \"put\",\r\n        url: `${domain}/user/change_password`,\r\n        data: { id: userId, password },\r\n      });\r\n      if (response.status === 200) {\r\n        dispatch(setMessage(\"PASSWORD_CHANGE_SUCCESS\"));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(setMessage(\"PASSWORD_CHANGE_ERROR\"));\r\n    }\r\n  }, [dispatch, password, userId]);\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      {settingsMessages && <MessagePopup />}\r\n      <ul>\r\n        <li className={css.item}>\r\n          <p className={css.itemName}>Изменить фото профиля</p>\r\n          <div className={css.itemSetter}>\r\n            <Widget\r\n              validators={[fileTypeLimit(\"jpeg png jpg\")]}\r\n              tabs=\"file url\"\r\n              onChange={changeProfileImage}\r\n              publicKey=\"73fb322ae944f810ceb2\"\r\n            />\r\n          </div>\r\n        </li>\r\n\r\n        <li className={css.item}>\r\n          <p className={css.itemName}>Изменить пароль</p>\r\n          <div className={css.itemSetter}>\r\n            <input\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className={css.textInput}\r\n            />\r\n            <SendButton onClick={() => sendPassword()} />\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default withAuth(Settings);\r\n"]},"metadata":{},"sourceType":"module"}