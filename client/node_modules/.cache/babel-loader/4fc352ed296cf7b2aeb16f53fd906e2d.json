{"ast":null,"code":"import React,{useEffect,useCallback}from\"react\";import{Link,useParams}from\"react-router-dom\";import Calendar from\"react-calendar\";import css from\"./PersonCalendar.module.css\";import{ReactComponent as ChangeNameSvg}from\"../../../svg/Write.svg\";import\"./ReactCalendar.css\";import PersonsInDate from\"./PersonsInDate/PersonsInDate\";import{connect,useDispatch,useSelector}from\"react-redux\";import{loadMainDate,loadSidePersons,nextSidePage,showWorkshift,updateTargetDate}from\"../../../redux/calendar/calendarActions\";import{bindPersonToUser}from\"../../../redux/user/userActions\";import Spinner from\"../../Custom/Spinner/Spinner\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var VISIBLE_ITEMS=4;function sameDay(d1,d2){return d1.getFullYear()===d2.getFullYear()&&d1.getDate()===d2.getDate()&&d1.getMonth()===d2.getMonth();}var PersonCalendar=function PersonCalendar(props){var _useParams=useParams(),person_id=_useParams.person_id;var _useSelector=useSelector(function(state){return state.calendar;}),workShifts=_useSelector.workShifts,personName=_useSelector.personName,isLoading=_useSelector.isLoading;var dispatch=useDispatch();useEffect(function(){dispatch(loadMainDate(person_id));dispatch(bindPersonToUser(person_id));},[person_id,dispatch]);useEffect(function(){dispatch(loadSidePersons(new Date(+props.targetDate+10800000)));},[props.targetDate,dispatch]);useEffect(function(){var currrentWsItem=workShifts.filter(function(item){return sameDay(item.date,props.targetDate);})[0];var workshift=(currrentWsItem===null||currrentWsItem===void 0?void 0:currrentWsItem.shiftTime)||(currrentWsItem===null||currrentWsItem===void 0?void 0:currrentWsItem.shiftProp);dispatch(showWorkshift(workshift));dispatch(nextSidePage(\"reset\"));},[props.targetDate,dispatch,workShifts]);var resetBind=useCallback(function(){dispatch(bindPersonToUser());},[dispatch]);var highlightWorkdates=useCallback(function(date){if(workShifts.map(function(item){return+item.date;}).includes(+date.date+10800000)){return\"highlight__day\";}},[workShifts]);return/*#__PURE__*/_jsxs(\"section\",{className:\"defaultContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:css.namefield,children:[/*#__PURE__*/_jsx(\"p\",{className:css.name,children:personName}),/*#__PURE__*/_jsx(Link,{className:css.changeIcon,to:\"/user/calendar\",onClick:resetBind,children:/*#__PURE__*/_jsx(ChangeNameSvg,{})})]}),/*#__PURE__*/_jsxs(\"div\",{className:css.calendar,children:[/*#__PURE__*/_jsx(\"div\",{className:css.calendarItem,children:/*#__PURE__*/_jsx(\"div\",{className:css.calendarBox,children:/*#__PURE__*/_jsx(Calendar,{tileClassName:highlightWorkdates,onChange:props.updateTargetDate,value:props.targetDate})})}),isLoading?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsx(PersonsInDate,{VISIBLE_ITEMS:VISIBLE_ITEMS})]})]});};var mapStateToProps=function mapStateToProps(state){return{targetDate:state.calendar.targetDate};};var mapDispatchToProps={updateTargetDate:updateTargetDate};export default connect(mapStateToProps,mapDispatchToProps)(PersonCalendar);","map":{"version":3,"sources":["D:/Work/Projects/web_sheet_node_server/client/src/components/SearchCalendar/PersonCalendar/PersonCalendar.jsx"],"names":["React","useEffect","useCallback","Link","useParams","Calendar","css","ReactComponent","ChangeNameSvg","PersonsInDate","connect","useDispatch","useSelector","loadMainDate","loadSidePersons","nextSidePage","showWorkshift","updateTargetDate","bindPersonToUser","Spinner","VISIBLE_ITEMS","sameDay","d1","d2","getFullYear","getDate","getMonth","PersonCalendar","props","person_id","state","calendar","workShifts","personName","isLoading","dispatch","Date","targetDate","currrentWsItem","filter","item","date","workshift","shiftTime","shiftProp","resetBind","highlightWorkdates","map","includes","namefield","name","changeIcon","calendarItem","calendarBox","mapStateToProps","mapDispatchToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,WAA3B,KAA8C,OAA9C,CACA,OAASC,IAAT,CAAeC,SAAf,KAAgC,kBAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAOC,CAAAA,GAAP,KAAgB,6BAAhB,CACA,OAASC,cAAc,GAAIC,CAAAA,aAA3B,KAAgD,wBAAhD,CACA,MAAO,qBAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,OAASC,OAAT,CAAkBC,WAAlB,CAA+BC,WAA/B,KAAkD,aAAlD,CACA,OACEC,YADF,CAEEC,eAFF,CAGEC,YAHF,CAIEC,aAJF,CAKEC,gBALF,KAMO,yCANP,CAOA,OAASC,gBAAT,KAAiC,iCAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,8BAApB,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,CAAtB,CAEA,QAASC,CAAAA,OAAT,CAAiBC,EAAjB,CAAqBC,EAArB,CAAyB,CACvB,MACED,CAAAA,EAAE,CAACE,WAAH,KAAqBD,EAAE,CAACC,WAAH,EAArB,EACAF,EAAE,CAACG,OAAH,KAAiBF,EAAE,CAACE,OAAH,EADjB,EAEAH,EAAE,CAACI,QAAH,KAAkBH,EAAE,CAACG,QAAH,EAHpB,CAKD,CAED,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAChC,eAAsBxB,SAAS,EAA/B,CAAQyB,SAAR,YAAQA,SAAR,CACA,iBAA8CjB,WAAW,CACvD,SAACkB,KAAD,QAAWA,CAAAA,KAAK,CAACC,QAAjB,EADuD,CAAzD,CAAQC,UAAR,cAAQA,UAAR,CAAoBC,UAApB,cAAoBA,UAApB,CAAgCC,SAAhC,cAAgCA,SAAhC,CAGA,GAAMC,CAAAA,QAAQ,CAAGxB,WAAW,EAA5B,CAEAV,SAAS,CAAC,UAAM,CACdkC,QAAQ,CAACtB,YAAY,CAACgB,SAAD,CAAb,CAAR,CACAM,QAAQ,CAACjB,gBAAgB,CAACW,SAAD,CAAjB,CAAR,CACD,CAHQ,CAGN,CAACA,SAAD,CAAYM,QAAZ,CAHM,CAAT,CAKAlC,SAAS,CAAC,UAAM,CACdkC,QAAQ,CAACrB,eAAe,CAAC,GAAIsB,CAAAA,IAAJ,CAAS,CAACR,KAAK,CAACS,UAAP,CAAoB,QAA7B,CAAD,CAAhB,CAAR,CACD,CAFQ,CAEN,CAACT,KAAK,CAACS,UAAP,CAAmBF,QAAnB,CAFM,CAAT,CAIAlC,SAAS,CAAC,UAAM,CACd,GAAMqC,CAAAA,cAAc,CAAGN,UAAU,CAACO,MAAX,CAAkB,SAACC,IAAD,QACvCnB,CAAAA,OAAO,CAACmB,IAAI,CAACC,IAAN,CAAYb,KAAK,CAACS,UAAlB,CADgC,EAAlB,EAErB,CAFqB,CAAvB,CAGA,GAAMK,CAAAA,SAAS,CAAG,CAAAJ,cAAc,OAAd,EAAAA,cAAc,SAAd,QAAAA,cAAc,CAAEK,SAAhB,IAA6BL,cAA7B,SAA6BA,cAA7B,iBAA6BA,cAAc,CAAEM,SAA7C,CAAlB,CACAT,QAAQ,CAACnB,aAAa,CAAC0B,SAAD,CAAd,CAAR,CACAP,QAAQ,CAACpB,YAAY,CAAC,OAAD,CAAb,CAAR,CACD,CAPQ,CAON,CAACa,KAAK,CAACS,UAAP,CAAmBF,QAAnB,CAA6BH,UAA7B,CAPM,CAAT,CASA,GAAMa,CAAAA,SAAS,CAAG3C,WAAW,CAAC,UAAM,CAClCiC,QAAQ,CAACjB,gBAAgB,EAAjB,CAAR,CACD,CAF4B,CAE1B,CAACiB,QAAD,CAF0B,CAA7B,CAIA,GAAMW,CAAAA,kBAAkB,CAAG5C,WAAW,CACpC,SAACuC,IAAD,CAAU,CACR,GACET,UAAU,CAACe,GAAX,CAAe,SAACP,IAAD,QAAU,CAACA,IAAI,CAACC,IAAhB,EAAf,EAAqCO,QAArC,CAA8C,CAACP,IAAI,CAACA,IAAN,CAAa,QAA3D,CADF,CAEE,CACA,MAAO,gBAAP,CACD,CACF,CAPmC,CAQpC,CAACT,UAAD,CARoC,CAAtC,CAWA,mBACE,iBAAS,SAAS,CAAC,kBAAnB,wBACE,aAAK,SAAS,CAAE1B,GAAG,CAAC2C,SAApB,wBACE,UAAG,SAAS,CAAE3C,GAAG,CAAC4C,IAAlB,UAAyBjB,UAAzB,EADF,cAEE,KAAC,IAAD,EACE,SAAS,CAAE3B,GAAG,CAAC6C,UADjB,CAEE,EAAE,CAAC,gBAFL,CAGE,OAAO,CAAEN,SAHX,uBAKE,KAAC,aAAD,IALF,EAFF,GADF,cAWE,aAAK,SAAS,CAAEvC,GAAG,CAACyB,QAApB,wBACE,YAAK,SAAS,CAAEzB,GAAG,CAAC8C,YAApB,uBACE,YAAK,SAAS,CAAE9C,GAAG,CAAC+C,WAApB,uBACE,KAAC,QAAD,EACE,aAAa,CAAEP,kBADjB,CAEE,QAAQ,CAAElB,KAAK,CAACX,gBAFlB,CAGE,KAAK,CAAEW,KAAK,CAACS,UAHf,EADF,EADF,EADF,CAUGH,SAAS,cACR,KAAC,OAAD,IADQ,cAGR,KAAC,aAAD,EAAe,aAAa,CAAEd,aAA9B,EAbJ,GAXF,GADF,CA8BD,CAtED,CAwEA,GAAMkC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACxB,KAAD,CAAW,CACjC,MAAO,CACLO,UAAU,CAAEP,KAAK,CAACC,QAAN,CAAeM,UADtB,CAAP,CAGD,CAJD,CAMA,GAAMkB,CAAAA,kBAAkB,CAAG,CACzBtC,gBAAgB,CAAhBA,gBADyB,CAA3B,CAIA,cAAeP,CAAAA,OAAO,CAAC4C,eAAD,CAAkBC,kBAAlB,CAAP,CAA6C5B,cAA7C,CAAf","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Calendar from \"react-calendar\";\r\nimport css from \"./PersonCalendar.module.css\";\r\nimport { ReactComponent as ChangeNameSvg } from \"../../../svg/Write.svg\";\r\nimport \"./ReactCalendar.css\";\r\nimport PersonsInDate from \"./PersonsInDate/PersonsInDate\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  loadMainDate,\r\n  loadSidePersons,\r\n  nextSidePage,\r\n  showWorkshift,\r\n  updateTargetDate,\r\n} from \"../../../redux/calendar/calendarActions\";\r\nimport { bindPersonToUser } from \"../../../redux/user/userActions\";\r\nimport Spinner from \"../../Custom/Spinner/Spinner\";\r\n\r\nconst VISIBLE_ITEMS = 4;\r\n\r\nfunction sameDay(d1, d2) {\r\n  return (\r\n    d1.getFullYear() === d2.getFullYear() &&\r\n    d1.getDate() === d2.getDate() &&\r\n    d1.getMonth() === d2.getMonth()\r\n  );\r\n}\r\n\r\nconst PersonCalendar = (props) => {\r\n  const { person_id } = useParams();\r\n  const { workShifts, personName, isLoading } = useSelector(\r\n    (state) => state.calendar\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadMainDate(person_id));\r\n    dispatch(bindPersonToUser(person_id));\r\n  }, [person_id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadSidePersons(new Date(+props.targetDate + 10800000)));\r\n  }, [props.targetDate, dispatch]);\r\n\r\n  useEffect(() => {\r\n    const currrentWsItem = workShifts.filter((item) =>\r\n      sameDay(item.date, props.targetDate)\r\n    )[0];\r\n    const workshift = currrentWsItem?.shiftTime || currrentWsItem?.shiftProp;\r\n    dispatch(showWorkshift(workshift));\r\n    dispatch(nextSidePage(\"reset\"));\r\n  }, [props.targetDate, dispatch, workShifts]);\r\n\r\n  const resetBind = useCallback(() => {\r\n    dispatch(bindPersonToUser());\r\n  }, [dispatch]);\r\n\r\n  const highlightWorkdates = useCallback(\r\n    (date) => {\r\n      if (\r\n        workShifts.map((item) => +item.date).includes(+date.date + 10800000)\r\n      ) {\r\n        return \"highlight__day\";\r\n      }\r\n    },\r\n    [workShifts]\r\n  );\r\n\r\n  return (\r\n    <section className=\"defaultContainer\">\r\n      <div className={css.namefield}>\r\n        <p className={css.name}>{personName}</p>\r\n        <Link\r\n          className={css.changeIcon}\r\n          to=\"/user/calendar\"\r\n          onClick={resetBind}\r\n        >\r\n          <ChangeNameSvg />\r\n        </Link>\r\n      </div>\r\n      <div className={css.calendar}>\r\n        <div className={css.calendarItem}>\r\n          <div className={css.calendarBox}>\r\n            <Calendar\r\n              tileClassName={highlightWorkdates}\r\n              onChange={props.updateTargetDate}\r\n              value={props.targetDate}\r\n            />\r\n          </div>\r\n        </div>\r\n        {isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <PersonsInDate VISIBLE_ITEMS={VISIBLE_ITEMS} />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    targetDate: state.calendar.targetDate,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateTargetDate,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonCalendar);\r\n"]},"metadata":{},"sourceType":"module"}