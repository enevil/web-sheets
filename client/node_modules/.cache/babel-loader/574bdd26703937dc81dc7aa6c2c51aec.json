{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\websheets\\\\src\\\\components\\\\Statistic\\\\Statistic.jsx\",\n    _s = $RefreshSig$();\n\nimport { withAuth } from \"../hoc/withAuth\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport css from \"./Statistic.module.css\";\nimport { Bar } from \"react-chartjs-2\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadMainDate } from \"../../redux/calendar/calendarActions\";\nimport Results from \"./Results/Results\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst ruMonthes = [\"январь\", \"февраль\", \"март\", \"апрель\", \"май\", \"июнь\", \"июль\", \"август\", \"сентябрь\", \"октябрь\", \"ноябрь\", \"декабрь\"];\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      display: false\n    }\n  }\n};\n\nfunction sameDay(d1, d2) {\n  return d1.getFullYear() === d2.getFullYear() && d1.getDate() === d2.getDate() && d1.getMonth() === d2.getMonth();\n}\n\nfunction getDaysInMonth(date) {\n  let firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n  let lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  let startDay = firstDay;\n  let days = [];\n\n  while (!sameDay(lastDay, startDay)) {\n    days.push(new Date(startDay));\n    startDay.setDate(startDay.getDate() + 1);\n  }\n\n  days.push(new Date(startDay));\n  return days;\n}\n\nconst Statistic = () => {\n  _s();\n\n  const {\n    workShifts\n  } = useSelector(state => state.calendar);\n  const {\n    personId\n  } = useSelector(state => state.user);\n  const [visDate, setVisDate] = useState([]);\n  const [datesInMonth, setDatesInMonth] = useState([]);\n  const [currentDate, setCurrentDate] = useState(new Date(new Date().setDate(1)));\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadMainDate(personId));\n  }, [personId, dispatch]);\n  useEffect(() => {\n    const datesInMonth = getDaysInMonth(currentDate);\n    const wsInThisMonth = workShifts.filter(item => {\n      const lastDateInMonth = new Date(currentDate).setDate(30);\n      if (item.date <= lastDateInMonth && item.date >= currentDate) return true;\n      return false;\n    });\n\n    if (wsInThisMonth.length) {\n      let wsIndex = 0;\n      const vis = datesInMonth.map(date => {\n        if (wsIndex >= wsInThisMonth.length) return 0;\n\n        if (sameDay(date, wsInThisMonth[wsIndex].date)) {\n          const workHours = wsInThisMonth[wsIndex].shiftTime.split(\"-\");\n          const workTime = +workHours[1] - +workHours[0];\n          wsIndex++;\n          if (isNaN(workTime)) return 0;\n          return workTime;\n        }\n\n        return 0;\n      });\n      setVisDate(vis);\n    } else if (wsInThisMonth.length === 0) {\n      const vis = datesInMonth.map(() => 0);\n      setVisDate(vis);\n    }\n\n    setDatesInMonth(datesInMonth);\n  }, [workShifts, currentDate]);\n  console.log(visDate);\n  console.log(datesInMonth);\n  console.log(currentDate);\n  const monthSwitch = useCallback(step => {\n    const newDate = new Date(currentDate);\n    newDate.setMonth(newDate.getMonth() + step);\n    setCurrentDate(newDate);\n  }, [currentDate]);\n  const data = {\n    labels: datesInMonth.map((_, i) => i + 1),\n    datasets: [{\n      label: \"Отработанные часы\",\n      data: visDate,\n      backgroundColor: \"rgba(201, 119, 119, 0.8)\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.topInfo,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u043E\\u0442\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0447\\u0430\\u0441\\u043E\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.month,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => monthSwitch(-1),\n        className: css.arrow,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.monthText,\n        children: [ruMonthes[currentDate.getMonth()], \" \", currentDate.getFullYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => monthSwitch(1),\n        className: css.arrow,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        visDate: visDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Statistic, \"2xic9x+1ek5CMDO4RvFBiVFTWRo=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Statistic;\nexport default _c2 = withAuth(Statistic);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Statistic\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/Work/websheets/src/components/Statistic/Statistic.jsx"],"names":["withAuth","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","css","Bar","useCallback","useEffect","useState","useDispatch","useSelector","loadMainDate","Results","register","ruMonthes","options","responsive","plugins","legend","display","sameDay","d1","d2","getFullYear","getDate","getMonth","getDaysInMonth","date","firstDay","Date","lastDay","startDay","days","push","setDate","Statistic","workShifts","state","calendar","personId","user","visDate","setVisDate","datesInMonth","setDatesInMonth","currentDate","setCurrentDate","dispatch","wsInThisMonth","filter","item","lastDateInMonth","length","wsIndex","vis","map","workHours","shiftTime","split","workTime","isNaN","console","log","monthSwitch","step","newDate","setMonth","data","labels","_","i","datasets","label","backgroundColor","container","topInfo","month","arrow","monthText"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF,QAQO,UARP;AASA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEAf,OAAO,CAACgB,QAAR,CACEf,aADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,MANF;AASA,MAAMW,SAAS,GAAG,CAChB,QADgB,EAEhB,SAFgB,EAGhB,MAHgB,EAIhB,QAJgB,EAKhB,KALgB,EAMhB,MANgB,EAOhB,MAPgB,EAQhB,QARgB,EAShB,UATgB,EAUhB,SAVgB,EAWhB,QAXgB,EAYhB,SAZgB,CAAlB;AAeA,MAAMC,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,IADE;AAEdC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AADH;AADD;AAFK,CAAhB;;AASA,SAASC,OAAT,CAAiBC,EAAjB,EAAqBC,EAArB,EAAyB;AACvB,SACED,EAAE,CAACE,WAAH,OAAqBD,EAAE,CAACC,WAAH,EAArB,IACAF,EAAE,CAACG,OAAH,OAAiBF,EAAE,CAACE,OAAH,EADjB,IAEAH,EAAE,CAACI,QAAH,OAAkBH,EAAE,CAACG,QAAH,EAHpB;AAKD;;AAED,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,MAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACJ,WAAL,EAAT,EAA6BI,IAAI,CAACF,QAAL,EAA7B,EAA8C,CAA9C,CAAf;AACA,MAAIK,OAAO,GAAG,IAAID,IAAJ,CAASF,IAAI,CAACJ,WAAL,EAAT,EAA6BI,IAAI,CAACF,QAAL,KAAkB,CAA/C,EAAkD,CAAlD,CAAd;AAEA,MAAIM,QAAQ,GAAGH,QAAf;AACA,MAAII,IAAI,GAAG,EAAX;;AACA,SAAO,CAACZ,OAAO,CAACU,OAAD,EAAUC,QAAV,CAAf,EAAoC;AAClCC,IAAAA,IAAI,CAACC,IAAL,CAAU,IAAIJ,IAAJ,CAASE,QAAT,CAAV;AACAA,IAAAA,QAAQ,CAACG,OAAT,CAAiBH,QAAQ,CAACP,OAAT,KAAqB,CAAtC;AACD;;AACDQ,EAAAA,IAAI,CAACC,IAAL,CAAU,IAAIJ,IAAJ,CAASE,QAAT,CAAV;AACA,SAAOC,IAAP;AACD;;AAED,MAAMG,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAiB1B,WAAW,CAAE2B,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAAlC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAe7B,WAAW,CAAE2B,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmC,YAAD,EAAeC,eAAf,IAAkCpC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACqC,WAAD,EAAcC,cAAd,IAAgCtC,QAAQ,CAC5C,IAAIqB,IAAJ,CAAS,IAAIA,IAAJ,GAAWK,OAAX,CAAmB,CAAnB,CAAT,CAD4C,CAA9C;AAGA,QAAMa,QAAQ,GAAGtC,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdwC,IAAAA,QAAQ,CAACpC,YAAY,CAAC4B,QAAD,CAAb,CAAR;AACD,GAFQ,EAEN,CAACA,QAAD,EAAWQ,QAAX,CAFM,CAAT;AAIAxC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoC,YAAY,GAAGjB,cAAc,CAACmB,WAAD,CAAnC;AACA,UAAMG,aAAa,GAAGZ,UAAU,CAACa,MAAX,CAAmBC,IAAD,IAAU;AAChD,YAAMC,eAAe,GAAG,IAAItB,IAAJ,CAASgB,WAAT,EAAsBX,OAAtB,CAA8B,EAA9B,CAAxB;AACA,UAAIgB,IAAI,CAACvB,IAAL,IAAawB,eAAb,IAAgCD,IAAI,CAACvB,IAAL,IAAakB,WAAjD,EAA8D,OAAO,IAAP;AAC9D,aAAO,KAAP;AACD,KAJqB,CAAtB;;AAMA,QAAIG,aAAa,CAACI,MAAlB,EAA0B;AACxB,UAAIC,OAAO,GAAG,CAAd;AACA,YAAMC,GAAG,GAAGX,YAAY,CAACY,GAAb,CAAkB5B,IAAD,IAAU;AACrC,YAAI0B,OAAO,IAAIL,aAAa,CAACI,MAA7B,EAAqC,OAAO,CAAP;;AACrC,YAAIhC,OAAO,CAACO,IAAD,EAAOqB,aAAa,CAACK,OAAD,CAAb,CAAuB1B,IAA9B,CAAX,EAAgD;AAC9C,gBAAM6B,SAAS,GAAGR,aAAa,CAACK,OAAD,CAAb,CAAuBI,SAAvB,CAAiCC,KAAjC,CAAuC,GAAvC,CAAlB;AACA,gBAAMC,QAAQ,GAAG,CAACH,SAAS,CAAC,CAAD,CAAV,GAAgB,CAACA,SAAS,CAAC,CAAD,CAA3C;AACAH,UAAAA,OAAO;AACP,cAAIO,KAAK,CAACD,QAAD,CAAT,EAAqB,OAAO,CAAP;AACrB,iBAAOA,QAAP;AACD;;AACD,eAAO,CAAP;AACD,OAVW,CAAZ;AAYAjB,MAAAA,UAAU,CAACY,GAAD,CAAV;AACD,KAfD,MAeO,IAAIN,aAAa,CAACI,MAAd,KAAyB,CAA7B,EAAgC;AACrC,YAAME,GAAG,GAAGX,YAAY,CAACY,GAAb,CAAiB,MAAM,CAAvB,CAAZ;AACAb,MAAAA,UAAU,CAACY,GAAD,CAAV;AACD;;AACDV,IAAAA,eAAe,CAACD,YAAD,CAAf;AACD,GA5BQ,EA4BN,CAACP,UAAD,EAAaS,WAAb,CA5BM,CAAT;AA8BAgB,EAAAA,OAAO,CAACC,GAAR,CAAYrB,OAAZ;AACAoB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,YAAZ;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAYjB,WAAZ;AAEA,QAAMkB,WAAW,GAAGzD,WAAW,CAC5B0D,IAAD,IAAU;AACR,UAAMC,OAAO,GAAG,IAAIpC,IAAJ,CAASgB,WAAT,CAAhB;AACAoB,IAAAA,OAAO,CAACC,QAAR,CAAiBD,OAAO,CAACxC,QAAR,KAAqBuC,IAAtC;AACAlB,IAAAA,cAAc,CAACmB,OAAD,CAAd;AACD,GAL4B,EAM7B,CAACpB,WAAD,CAN6B,CAA/B;AASA,QAAMsB,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAEzB,YAAY,CAACY,GAAb,CAAiB,CAACc,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAG,CAA/B,CADG;AAEXC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,mBADT;AAEEL,MAAAA,IAAI,EAAE1B,OAFR;AAGEgC,MAAAA,eAAe,EAAE;AAHnB,KADQ;AAFC,GAAb;AAWA,sBACE;AAAK,IAAA,SAAS,EAAErE,GAAG,CAACsE,SAApB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEtE,GAAG,CAACuE,OAApB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAE5D,OAAd;AAAuB,MAAA,IAAI,EAAEoD;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAK,MAAA,SAAS,EAAE/D,GAAG,CAACwE,KAApB;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMb,WAAW,CAAC,CAAC,CAAF,CAAlC;AAAwC,QAAA,SAAS,EAAE3D,GAAG,CAACyE,KAAvD;AAAA,kBACG;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAG,QAAA,SAAS,EAAEzE,GAAG,CAAC0E,SAAlB;AAAA,mBACGhE,SAAS,CAAC+B,WAAW,CAACpB,QAAZ,EAAD,CADZ,OACuCoB,WAAW,CAACtB,WAAZ,EADvC;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,QAAA,OAAO,EAAE,MAAMwC,WAAW,CAAC,CAAD,CAAlC;AAAuC,QAAA,SAAS,EAAE3D,GAAG,CAACyE,KAAtD;AAAA,kBACG;AADH;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEpC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAxFD;;GAAMN,S;UACmBzB,W,EACFA,W,EAMJD,W;;;KARb0B,S;AA0FN,qBAAexC,QAAQ,CAACwC,SAAD,CAAvB","sourcesContent":["import { withAuth } from \"../hoc/withAuth\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport css from \"./Statistic.module.css\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadMainDate } from \"../../redux/calendar/calendarActions\";\r\nimport Results from \"./Results/Results\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst ruMonthes = [\r\n  \"январь\",\r\n  \"февраль\",\r\n  \"март\",\r\n  \"апрель\",\r\n  \"май\",\r\n  \"июнь\",\r\n  \"июль\",\r\n  \"август\",\r\n  \"сентябрь\",\r\n  \"октябрь\",\r\n  \"ноябрь\",\r\n  \"декабрь\",\r\n];\r\n\r\nconst options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      display: false,\r\n    },\r\n  },\r\n};\r\n\r\nfunction sameDay(d1, d2) {\r\n  return (\r\n    d1.getFullYear() === d2.getFullYear() &&\r\n    d1.getDate() === d2.getDate() &&\r\n    d1.getMonth() === d2.getMonth()\r\n  );\r\n}\r\n\r\nfunction getDaysInMonth(date) {\r\n  let firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n  let lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n\r\n  let startDay = firstDay;\r\n  let days = [];\r\n  while (!sameDay(lastDay, startDay)) {\r\n    days.push(new Date(startDay));\r\n    startDay.setDate(startDay.getDate() + 1);\r\n  }\r\n  days.push(new Date(startDay));\r\n  return days;\r\n}\r\n\r\nconst Statistic = () => {\r\n  const { workShifts } = useSelector((state) => state.calendar);\r\n  const { personId } = useSelector((state) => state.user);\r\n  const [visDate, setVisDate] = useState([]);\r\n  const [datesInMonth, setDatesInMonth] = useState([]);\r\n  const [currentDate, setCurrentDate] = useState(\r\n    new Date(new Date().setDate(1))\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadMainDate(personId));\r\n  }, [personId, dispatch]);\r\n\r\n  useEffect(() => {\r\n    const datesInMonth = getDaysInMonth(currentDate);\r\n    const wsInThisMonth = workShifts.filter((item) => {\r\n      const lastDateInMonth = new Date(currentDate).setDate(30);\r\n      if (item.date <= lastDateInMonth && item.date >= currentDate) return true;\r\n      return false;\r\n    });\r\n\r\n    if (wsInThisMonth.length) {\r\n      let wsIndex = 0;\r\n      const vis = datesInMonth.map((date) => {\r\n        if (wsIndex >= wsInThisMonth.length) return 0;\r\n        if (sameDay(date, wsInThisMonth[wsIndex].date)) {\r\n          const workHours = wsInThisMonth[wsIndex].shiftTime.split(\"-\");\r\n          const workTime = +workHours[1] - +workHours[0];\r\n          wsIndex++;\r\n          if (isNaN(workTime)) return 0;\r\n          return workTime;\r\n        }\r\n        return 0;\r\n      });\r\n\r\n      setVisDate(vis);\r\n    } else if (wsInThisMonth.length === 0) {\r\n      const vis = datesInMonth.map(() => 0);\r\n      setVisDate(vis);\r\n    }\r\n    setDatesInMonth(datesInMonth);\r\n  }, [workShifts, currentDate]);\r\n\r\n  console.log(visDate);\r\n  console.log(datesInMonth);\r\n  console.log(currentDate);\r\n\r\n  const monthSwitch = useCallback(\r\n    (step) => {\r\n      const newDate = new Date(currentDate);\r\n      newDate.setMonth(newDate.getMonth() + step);\r\n      setCurrentDate(newDate);\r\n    },\r\n    [currentDate]\r\n  );\r\n\r\n  const data = {\r\n    labels: datesInMonth.map((_, i) => i + 1),\r\n    datasets: [\r\n      {\r\n        label: \"Отработанные часы\",\r\n        data: visDate,\r\n        backgroundColor: \"rgba(201, 119, 119, 0.8)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <div className={css.topInfo}>\r\n        <p>Кол-во отработанных часов</p>\r\n      </div>\r\n      <Bar options={options} data={data} />\r\n      <div className={css.month}>\r\n        <button onClick={() => monthSwitch(-1)} className={css.arrow}>\r\n          {\"<\"}\r\n        </button>\r\n        <p className={css.monthText}>\r\n          {ruMonthes[currentDate.getMonth()]} {currentDate.getFullYear()}\r\n        </p>\r\n        <button onClick={() => monthSwitch(1)} className={css.arrow}>\r\n          {\">\"}\r\n        </button>\r\n        <Results visDate={visDate}></Results>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuth(Statistic);\r\n"]},"metadata":{},"sourceType":"module"}