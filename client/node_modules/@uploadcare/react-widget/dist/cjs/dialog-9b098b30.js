'use strict';

var index = require('./index-de1ce3ed.js');
var React = require('react');
var uploadcare = require('uploadcare-widget');
var useDeepEffect = require('./use-deep-effect-95de0092.js');
require('react-fast-compare');
require('@uploadcare/client-suspense');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var uploadcare__default = /*#__PURE__*/_interopDefaultLegacy(uploadcare);

var merge = function merge(state, newState) {
  return index._objectSpread2(index._objectSpread2({}, state), newState);
};

var useState = function useState(initial) {
  return React.useReducer(merge, initial || {});
};

var containerStyles = {
  height: '500px',
  display: 'flex',
  flexDirection: 'column',
  alignItems: 'center',
  justifyContent: 'center'
};

var Progress = function Progress(_ref) {
  var hidden = _ref.hidden,
      value = _ref.value;
  var ref = React.useRef(null);
  var renderer = React.useRef(null);
  React.useEffect(function () {
    renderer.current = new uploadcare__default['default'].Circle(ref.current).renderer;
  }, []);
  React.useEffect(function () {
    renderer.current.setValue(value);
  }, [value]);
  return /*#__PURE__*/React__default['default'].createElement("div", {
    hidden: hidden,
    ref: ref
  });
};

var useDialog = function useDialog(props, uploadcare) {
  var _useState = useState({
    opened: true,
    file: null,
    progress: null
  }),
      _useState2 = index._slicedToArray(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  var customTabs = props.customTabs,
      tabsCss = props.tabsCss,
      locale = props.locale,
      localePluralize = props.localePluralize,
      localeTranslations = props.localeTranslations;
  useDeepEffect.useDeepEffect(function () {
    if (locale) window.UPLOADCARE_LOCALE = locale;
    if (localePluralize) window.UPLOADCARE_LOCALE_PLURALIZE = localePluralize;

    if (localeTranslations) {
      window.UPLOADCARE_LOCALE_TRANSLATIONS = localeTranslations;
    }

    return function () {
      if (locale) delete window.UPLOADCARE_LOCALE;
      if (localePluralize) delete window.UPLOADCARE_LOCALE_PLURALIZE;
      if (localeTranslations) delete window.UPLOADCARE_LOCALE_TRANSLATIONS;
    };
  }, [locale, localePluralize, localeTranslations]);
  useDeepEffect.useCustomTabs(customTabs, uploadcare);
  var panelContainer = React.useRef(null);
  var panelInstance = React.useRef(null);
  React.useEffect(function () {
    if (state.opened) {
      if (uploadcare && tabsCss && typeof tabsCss === 'string') {
        if (tabsCss.indexOf('https://') === 0) {
          uploadcare.tabsCss.addUrl(tabsCss);
        } else {
          uploadcare.tabsCss.addStyle(tabsCss);
        }
      }

      panelInstance.current && panelInstance.current.reject();
      panelInstance.current = uploadcare.openPanel(panelContainer.current, state.file ? uploadcare.fileFrom('uploaded', state.file.uuid, props) : null, props);
      setState({
        file: null
      });
      panelInstance.current.done(function (file) {
        setState({
          opened: false
        });
        file.progress(function (state) {
          return setState({
            progress: state.progress
          });
        });
        file.done(function (file) {
          return setState({
            file: file
          });
        });
      });
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [uploadcare, props, setState, state.opened]);
  React.useEffect(function () {
    return function () {
      return panelInstance.current && panelInstance.current.reject();
    };
  }, []);
  return [state, setState, panelContainer];
};

var Dialog = function Dialog(props) {
  var _useDialog = useDialog(props, uploadcare__default['default']),
      _useDialog2 = index._slicedToArray(_useDialog, 3),
      _useDialog2$ = _useDialog2[0],
      opened = _useDialog2$.opened,
      file = _useDialog2$.file,
      progress = _useDialog2$.progress,
      setState = _useDialog2[1],
      containerRef = _useDialog2[2];

  var readyState = file && !opened;
  var progressState = !file && !opened && progress !== null;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    id: props.id,
    style: containerStyles
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    ref: containerRef
  }), /*#__PURE__*/React__default['default'].createElement("span", {
    hidden: !readyState
  }, /*#__PURE__*/React__default['default'].createElement("button", {
    className: "uploadcare--button uploadcare--button_primary",
    onClick: function onClick() {
      return setState({
        opened: true,
        sourse: 'natural'
      });
    }
  }, "Open panel")), /*#__PURE__*/React__default['default'].createElement("span", {
    hidden: !readyState
  }, "File uuid: "), /*#__PURE__*/React__default['default'].createElement("span", {
    hidden: !readyState
  }, file && file.uuid), /*#__PURE__*/React__default['default'].createElement(Progress, {
    hidden: !progressState,
    value: progress
  }));
};

exports.default = Dialog;
